#!/bin/bash

# ================================================
# FACEIT BOT - QUICK PRODUCTION DEPLOYMENT SCRIPT
# ================================================
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ –≤–∞—à–µ–º VPS –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è

set -e

echo "================================================"
echo "üöÄ FACEIT Telegram Bot - Quick Deploy"
echo "================================================"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ root${NC}"
   echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo bash quick-deploy.sh"
   exit 1
fi

echo -e "${GREEN}‚úÖ –ó–∞–ø—É—Å–∫ —Å –ø—Ä–∞–≤–∞–º–∏ root${NC}"

# 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo -e "\n${YELLOW}üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤...${NC}"
apt-get update -qq
apt-get upgrade -y -qq

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo -e "\n${YELLOW}üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...${NC}"
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh > /dev/null 2>&1
    rm get-docker.sh
    echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "${GREEN}‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo -e "\n${YELLOW}üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose...${NC}"
    curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    echo -e "${GREEN}‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    echo -e "${GREEN}‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo -e "\n${YELLOW}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
PROJECT_DIR="/opt/faceit-bot"
mkdir -p $PROJECT_DIR
cd $PROJECT_DIR

# 6. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo -e "\n${YELLOW}üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞ –±–æ—Ç–∞...${NC}"
if [ -d ".git" ]; then
    echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    git pull origin master
else
    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å
    git clone https://github.com/your-username/faceit-telegram-bot.git . 2>/dev/null || {
        echo -e "${YELLOW}‚ö†Ô∏è  –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É${NC}"
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è, —Å–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        mkdir -p data logs
    }
fi

# 7. –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo -e "\n${YELLOW}‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è –æ—Ç Supabase –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
if [ ! -f .env ]; then
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç Supabase PostgreSQL:${NC}"
    read -s SUPABASE_PASSWORD
    
    cat > .env << EOF
# PRODUCTION CONFIGURATION
TELEGRAM_BOT_TOKEN=8200317917:AAE3wSxtG6N7wKeLJezgNaQsCd5uHMcXjVk
FACEIT_API_KEY=41f48f43-609c-4639-b821-360b039f18b4
DATABASE_URL=postgresql://postgres:${SUPABASE_PASSWORD}@db.emzlxdutmhmbvaetphpu.supabase.co:5432/postgres
REDIS_URL=redis://default:AZn7AAIncDFmZDE2ZDI4YTQ3Y2I0OWVkYTZjYjkzYWQ5OTIzNWRiMHAxMzk0MTk@enjoyed-tick-39419.upstash.io:6379
LOG_LEVEL=INFO
ENVIRONMENT=production
DATA_FILE_PATH=/home/app/data/data.json
EOF
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
else
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose —Ñ–∞–π–ª–∞
if [ ! -f docker-compose.production.yml ]; then
    echo -e "\n${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.production.yml...${NC}"
    cat > docker-compose.production.yml << 'EOF'
version: '3.8'

services:
  faceit-bot:
    image: faceit-bot:production
    container_name: faceit-bot-prod
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - .env
    command: python simple_bot.py
    volumes:
      - ./data:/home/app/data
      - ./logs:/home/app/logs
    networks:
      - faceit-network
    healthcheck:
      test: ["CMD", "python", "-c", "print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  faceit-network:
    driver: bridge
EOF
fi

# 9. –°–æ–∑–¥–∞–Ω–∏–µ Dockerfile –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f Dockerfile ]; then
    echo -e "\n${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ Dockerfile...${NC}"
    cat > Dockerfile << 'EOF'
FROM python:3.13-slim

WORKDIR /home/app

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN pip install --no-cache-dir \
    aiogram==3.20.0 \
    aiohttp==3.10.10 \
    pydantic==2.10.3 \
    pydantic-settings==2.6.1 \
    python-dotenv==1.0.1 \
    redis==5.2.1 \
    asyncpg==0.30.0

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
RUN mkdir -p /home/app/data /home/app/logs

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –±–æ—Ç–∞
COPY . .

CMD ["python", "simple_bot.py"]
EOF
fi

# 10. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo -e "\n${YELLOW}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö...${NC}"
mkdir -p data logs
chmod 755 data logs

# 11. –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
echo -e "\n${YELLOW}üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...${NC}"
docker build -t faceit-bot:production .

# 12. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\n${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose -f docker-compose.production.yml down 2>/dev/null || true

# 13. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
echo -e "\n${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...${NC}"
docker-compose -f docker-compose.production.yml up -d

# 14. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "\n${YELLOW}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...${NC}"
sleep 5
docker-compose -f docker-compose.production.yml ps

# 15. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
echo -e "\n${YELLOW}‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞...${NC}"
cat > /etc/systemd/system/faceit-bot.service << EOF
[Unit]
Description=FACEIT Telegram Bot
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$PROJECT_DIR
ExecStart=/usr/local/bin/docker-compose -f docker-compose.production.yml up -d
ExecStop=/usr/local/bin/docker-compose -f docker-compose.production.yml down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable faceit-bot.service

# 16. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
echo -e "\n${YELLOW}üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall...${NC}"
ufw allow 22/tcp 2>/dev/null || true
ufw allow 80/tcp 2>/dev/null || true
ufw allow 443/tcp 2>/dev/null || true
echo "y" | ufw enable 2>/dev/null || true

# 17. –í—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
echo ""
echo "================================================"
echo -e "${GREEN}‚úÖ DEPLOYMENT –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!${NC}"
echo "================================================"
echo ""
echo -e "${GREEN}üì± –í–∞—à –±–æ—Ç:${NC} @faceitstatsme_bot"
echo ""
echo -e "${YELLOW}üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "  –õ–æ–≥–∏:          docker-compose -f docker-compose.production.yml logs -f"
echo "  –†–µ—Å—Ç–∞—Ä—Ç:       docker-compose -f docker-compose.production.yml restart"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:     docker-compose -f docker-compose.production.yml down"
echo "  –°—Ç–∞—Ç—É—Å:        docker-compose -f docker-compose.production.yml ps"
echo ""
echo -e "${YELLOW}üìÇ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:${NC} $PROJECT_DIR"
echo ""
echo -e "${GREEN}‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ VPS${NC}"
echo ""
echo "================================================"

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
echo -e "\n${YELLOW}üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:${NC}"
docker-compose -f docker-compose.production.yml logs --tail=20 faceit-bot