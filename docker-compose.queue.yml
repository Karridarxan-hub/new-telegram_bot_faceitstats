version: '3.8'

services:
  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      sh -c "
        if [ -n \"$$REDIS_PASSWORD\" ]; then
          redis-server --requirepass $$REDIS_PASSWORD --appendonly yes
        else
          redis-server --appendonly yes
        fi
      "
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FACEIT Bot main application
  faceit-bot:
    build: .
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - FACEIT_API_KEY=${FACEIT_API_KEY}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - QUEUE_ENABLE_MONITORING=true
      - QUEUE_MAX_WORKERS=4
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: python main.py

  # Queue workers
  faceit-worker-1:
    build: .
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - FACEIT_API_KEY=${FACEIT_API_KEY}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: python worker.py work --workers 2 --queues high default

  faceit-worker-2:
    build: .
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - FACEIT_API_KEY=${FACEIT_API_KEY}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: python worker.py work --workers 2 --queues default low

  # RQ Dashboard for queue monitoring
  rq-dashboard:
    build: .
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "9181:9181"
    environment:
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "
        if [ -n \"$$REDIS_PASSWORD\" ]; then
          rq-dashboard --redis-url redis://:$$REDIS_PASSWORD@redis:6379 --port 9181 --bind 0.0.0.0
        else
          rq-dashboard --redis-url redis://redis:6379 --port 9181 --bind 0.0.0.0
        fi
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9181"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: faceit-bot-network