version: '3.8'

services:
  # Main Telegram Bot
  faceit-bot:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-bot
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - REDIS_URL=redis://redis:6379/0
      - QUEUE_REDIS_URL=redis://redis:6379/1
      - DATABASE_URL=postgresql+asyncpg://faceit_user:${POSTGRES_PASSWORD:-faceit_password}@postgres:5432/faceit_bot
    command: python main.py
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # RQ Worker - Priority Tasks (Critical & High)
  worker-priority:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-worker-priority
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - REDIS_URL=redis://redis:6379/0
      - QUEUE_REDIS_URL=redis://redis:6379/1
      - DATABASE_URL=postgresql+asyncpg://faceit_user:${POSTGRES_PASSWORD:-faceit_password}@postgres:5432/faceit_bot
      - WORKER_TYPE=priority
      - WORKER_NAME=priority-worker-1
    command: python worker.py
    volumes:
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.6'
        reservations:
          memory: 256M
          cpus: '0.3'

  # RQ Worker - Default Tasks  
  worker-default:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-worker-default
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - REDIS_URL=redis://redis:6379/0
      - QUEUE_REDIS_URL=redis://redis:6379/1
      - DATABASE_URL=postgresql+asyncpg://faceit_user:${POSTGRES_PASSWORD:-faceit_password}@postgres:5432/faceit_bot
      - WORKER_TYPE=default
      - WORKER_NAME=default-worker-1
    command: python worker.py
    volumes:
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.4'
        reservations:
          memory: 192M
          cpus: '0.2'

  # RQ Worker - Bulk Processing
  worker-bulk:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-worker-bulk
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - REDIS_URL=redis://redis:6379/0
      - QUEUE_REDIS_URL=redis://redis:6379/1
      - DATABASE_URL=postgresql+asyncpg://faceit_user:${POSTGRES_PASSWORD:-faceit_password}@postgres:5432/faceit_bot
      - WORKER_TYPE=bulk
      - WORKER_NAME=bulk-worker-1
    command: python worker.py
    volumes:
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.15'


  # RQ Dashboard (Optional - for monitoring)
  rq-dashboard:
    image: eoranged/rq-dashboard:latest
    container_name: faceit-rq-dashboard
    restart: unless-stopped
    ports:
      - "9181:9181"
    env_file:
      - .env.docker
    environment:
      - RQ_DASHBOARD_REDIS_URL=${QUEUE_REDIS_URL}
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

networks:
  faceit-network:
    driver: bridge

