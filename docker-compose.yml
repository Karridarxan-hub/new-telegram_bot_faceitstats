version: '3.8'

services:
  # Main Telegram Bot
  faceit-bot:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-bot
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    command: python main.py
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # RQ Worker - Priority Tasks (Critical & High)
  worker-priority:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-worker-priority
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - WORKER_TYPE=priority
      - WORKER_NAME=priority-worker-1
    command: python worker.py
    volumes:
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.6'
        reservations:
          memory: 256M
          cpus: '0.3'

  # RQ Worker - Default Tasks  
  worker-default:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-worker-default
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - WORKER_TYPE=default
      - WORKER_NAME=default-worker-1
    command: python worker.py
    volumes:
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.4'
        reservations:
          memory: 192M
          cpus: '0.2'

  # RQ Worker - Bulk Processing
  worker-bulk:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    image: faceit-bot:latest
    container_name: faceit-worker-bulk
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - WORKER_TYPE=bulk
      - WORKER_NAME=bulk-worker-1
    command: python worker.py
    volumes:
      - ./logs:/app/logs
    networks:
      - faceit-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.15'


  # Monitoring Service (replacement for RQ Dashboard)
  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    image: faceit-monitoring:latest
    container_name: faceit-monitoring
    restart: unless-stopped
    ports:
      - "9181:9181"
    env_file:
      - .env.docker
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - MONITORING_PORT=9181
      - FLASK_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - faceit-bot
      - worker-priority
      - worker-default
      - worker-bulk
    networks:
      - faceit-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:9181/api/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.15'

networks:
  faceit-network:
    driver: bridge

